{"filter":false,"title":"content_controller.rb","tooltip":"/app/controllers/content_controller.rb","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":89,"column":0},"action":"insert","lines":["class ContentsController < ApplicationController","  before_action :set_content, only: [:show, :edit, :update, :destroy]","","  # GET /contents","  # GET /contents.json","  def index","    @contents = Content.all","  end","","  # GET /contents/1","  # GET /contents/1.json","  def show","  end","","  # GET /contents/new","  def new","    @content = Content.new","  end","","  # GET /contents/1/edit","  def edit","  end","","  # POST /contents","  # POST /contents.json","  def create","    @content = Content.new(content_params)","","    @content = Content.new(content_params)","    if Section.exists? id: @content.section_id","      respond_to do |format|","      if @content.save","        format.html { redirect_to @content, notice: 'Content was successfully created.' }","        format.json { render :show, status: :created, location: @content }","      else","        format.html { render :new }","        format.json { render json: @content.errors, status: :unprocessable_entity }","      end","    end","    else","      respond_to do |format|","        #format.html { redirect_to @content, notice: 'Ingrese una seccion existente'}","        format.html { render :new, notice: 'asdada'}","        format.json { render json: @content.errors, status: :unprocessable_entity }","      end","    end","","","","","","    ","  end","","  # PATCH/PUT /contents/1","  # PATCH/PUT /contents/1.json","  def update","    respond_to do |format|","      if @content.update(content_params)","        format.html { redirect_to @content, notice: 'Content was successfully updated.' }","        format.json { render :show, status: :ok, location: @content }","      else","        format.html { render :edit }","        format.json { render json: @content.errors, status: :unprocessable_entity }","      end","    end","  end","","  # DELETE /contents/1","  # DELETE /contents/1.json","  def destroy","    @content.destroy","    respond_to do |format|","      format.html { redirect_to contents_url, notice: 'Content was successfully destroyed.' }","      format.json { head :no_content }","    end","  end","","  private","    # Use callbacks to share common setup or constraints between actions.","    def set_content","      @content = Content.find(params[:id])","    end","","    # Never trust parameters from the scary internet, only allow the white list through.","    def content_params","      params.require(:content).permit(:name, :description, :section_id)","    end","end",""],"id":1}]]},"ace":{"folds":[],"scrolltop":1001,"scrollleft":0,"selection":{"start":{"row":89,"column":0},"end":{"row":89,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":61,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1460487036032,"hash":"c4630c24fba1f3d997feebcf630416a520e74f9a"}